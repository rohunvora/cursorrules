# ðŸ§­ Global Cursor Rules Cheat-Sheet

> This file is **always** loaded. It teaches the agent how to write, name and apply every other rule.

## 1. Meta-Rule â€” "Rule-Generating-Agent"
* Treat this document itself as a template for creating or updating rules.
* When the user requests a new rule or behaviour change, the agent MUST:
  1. Select the correct rule type (see table below).
  2. Place the file in the correct folder and use the `<slug>-<type>.mdc` naming pattern.
  3. Include YAML front-matter with all three keys (`description`, `globs`, `alwaysApply`).
  4. Add one **valid** and one **invalid** `<example>` block.
  5. Stay under **25 lines** (hard cap 50).
* After writing or updating a rule, the agent replies with:
  ```
  AutoRuleGen Success: <relative path to rule>
  Rule Type: <Always|Auto|Agent|Manual>
  Rule Description: <description field>
  ```

## 2. Canonical Rule Types & Naming
| Type  | Front-matter signature | Loads whenâ€¦                                | File suffix |
|-------|------------------------|--------------------------------------------|-------------|
| Always | `alwaysApply: true` *(globs ignored)* | Every chat / Cmd-K request                  | `-always.mdc` |
| Auto-Attach | `globs: <comma list>` | Current file **matches** a glob            | `-auto.mdc` |
| Agent-Select | `description:` only | Agent fetches it via Cmd-K / search        | `-agent.mdc` |
| Manual | *(all three blank)*      | Only when user explicitly references it    | `-manual.mdc` |

**Important:** Mixing `alwaysApply: true` with `globs:` disables glob filtering.

## 3. Folder Taxonomy (see architecture.mdc)
Rules live under `.cursor/rules/<domain>/` (e.g. `ui-rules/`, `ts-rules/`).

---
## 4. Legacy Hard Rules (still enforced)
* **MUST:** No `git push --force` without explicit user OK âœ…
* **Important:** Prefix hard rules with **"MUST:"** or **"Important:"** ðŸ”§
* **MUST:** Trust LLM intelligence â€“ prefer primitives over templates ðŸ”§
* **MUST:** Read files before editing âœ…
* **Important:** Include debug info in output âœ…
* **Important:** Run `npm audit` for vulnerabilities âœ…