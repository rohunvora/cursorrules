# ðŸ§¹ Housekeeping Rule

## Critical Rules
1. **Quarterly prune:** every 90 days consolidate tiny rules, delete obsolete ones, keep <15 total per domain.
2. **Line budget:** target â‰¤25 lines, hard cap 50 (excluding front-matter & examples).
3. **Indexing hygiene:** update `.cursorindexingignore` & `.repomixignore` when adding large or generated files (>1 MB).
4. **Archive rule files** to `.cursor/archive/YYYY-MM-DD_<slug>.mdc` instead of deleting.
5. **Editor setting fix:** ensure the following snippet is present in `.vscode/settings.json` or global settings to avoid .mdc viewer bugs:
   ```json
   "workbench.editorAssociations": {
     "*.mdc": "default"
   }
   ```
6. **Rule update process:** let the "Rule-Generating-Agent" handle edits; manual edits require peer review.

---
<!-- retain existing operational checklists below -->

# File Naming
* `snake_case.py` - Python files
* `kebab-case.mdx` - MDX/Markdown files
* `PascalCase.tsx` - React/TypeScript components
* `camelCase.js` - JavaScript files

# Logging
* Use level tags: `[INFO]`, `[WARN]`, `[ERROR]`
* Include correlation IDs for related operations
* Format: `[LEVEL] YYYY-MM-DD HH:MM:SS | Component | Message | {context}`
* Always log:
  - Major operation start/end
  - Errors with full context
  - State changes and decisions

# Branch & Commit Hygiene
* Delete merged branches within 24 hours
* Branch naming: `<type>/<description>-<issue-number>`
  - Types: `feature/`, `fix/`, `chore/`, `docs/`
* Commit messages:
  - Format: `<type>(<scope>): <subject>`
  - Subject: imperative mood, â‰¤72 chars
  - Examples:
    - `feat(auth): add OAuth2 integration`
    - `fix(api): handle null response in user endpoint`
    - `chore(rules): bootstrap modular .mdc rule set`

# Code Quality
* Run linters before commits
* Fix linter errors at root cause
* No commented-out code in commits
* Remove debug prints before committing

# Documentation
* Update docs with code changes
* Keep README current
* Document non-obvious decisions